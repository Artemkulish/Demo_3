stages:
    - build
    - deploy    
    - update
    
.build_template: &build_template
    stage: build
    script:
        - cd $PATH_TO_APP
        - mvn clean package
        - cat Dockerfile | sed -e "s/-hidden_access_id-/$SUMOLOGIC_ACCESS_ID/; s/-hidden_access_key-/$SUMOLOGIC_ACCESS_KEY/" > ./Dockerfile_changed
        - sudo mv Dockerfile_changed Dockerfile
        - sudo docker build -t gitlab.svagworks.me:5050/root/demo_3:$PATH_TO_APP .
        - sudo docker push gitlab.svagworks.me:5050/root/demo_3:$PATH_TO_APP

build_messaging:
    <<: *build_template
    variables:
        PATH_TO_APP: messaging
    only:
        changes:
            - messaging/**/*
        
build_payment:
    <<: *build_template
    variables:
       PATH_TO_APP: payment
    only:
        changes:
           - payment/**/*

build_simulation:
    <<: *build_template
    variables:
        PATH_TO_APP: simulation     
    only:
        changes:
            - simulation/**/*

build_trip:
    <<: *build_template
    variables:
        PATH_TO_APP: trip     
    only:
        changes:
            - trip/**/*

build_vehicle:
    <<: *build_template
    variables:
        PATH_TO_APP: vehicle     
    only:
        changes:
            - vehicle/**/*

build_identity:
    stage: build
    script:
        - cd identity/identity-starter && mvn clean install
        - cd ../identity-service && mvn clean package
        - sudo docker build -t gitlab.svagworks.me:5050/root/demo_3:identity .
        - sudo docker push gitlab.svagworks.me:5050/root/demo_3:identity
    only:
        changes:
            - identity/**/*

deploy:
    stage: deploy
    script:
      - INSTANCE_IP=$(cat ~/instance_ip)
      - scp -r /home/env docker-compose.yml deploy.sh $USERNAME@$INSTANCE_IP:/tmp
      - ssh $USERNAME@$INSTANCE_IP "sudo cp -r /tmp/env /var/ && sudo mv /tmp/docker-compose.yml /var/ && sudo mv /tmp/deploy.sh /var/"
      - ssh $USERNAME@$INSTANCE_IP "cd /var/ && sudo bash /var/deploy.sh"
    only:
        changes:
            - identity/**/*
            - vehicle/**/*
            - trip/**/*
            - simulation/**/*
            - payment/**/*
            - messaging/**/*
            
.database_template: &database_template
    stage: update
    script:
        - cd identity/identity-service
        - mvn liquibase:$FUNCTION
    when: manual
    
database_update:
    <<: *database_template
    variables:
        FUNCTION: update
    only:
        changes:
            - database-update/identity.xml  
    
database_rollback:
    <<: *database_template
    variables:
        FUNCTION: rollback -Dliquibase.rollbackCount=1
    only:
        changes:
            - database-update/identity.xml  
